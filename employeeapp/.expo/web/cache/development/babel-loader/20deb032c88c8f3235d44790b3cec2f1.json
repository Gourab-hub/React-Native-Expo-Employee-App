{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport react, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateEmployee = function CreateEmployee(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  console.log(\"Create Employee\", route);\n\n  var getDetails = function getDetails(type) {\n    if (route.params) {\n      switch (type) {\n        case \"name\":\n          return route.params.name;\n\n        case \"phone\":\n          return route.params.phone;\n\n        case \"email\":\n          return route.params.email;\n\n        case \"salary\":\n          return route.params.salary;\n\n        case \"picture\":\n          return route.params.picture;\n\n        case \"position\":\n          return route.params.position;\n      }\n    }\n\n    return \"\";\n  };\n\n  var _useState = useState(getDetails(\"name\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(getDetails(\"email\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(getDetails(\"phone\")),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(getDetails(\"salary\")),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salary = _useState8[0],\n      setSalary = _useState8[1];\n\n  var _useState9 = useState(getDetails(\"picture\")),\n      _useState10 = _slicedToArray(_useState9, 2),\n      picture = _useState10[0],\n      setPicture = _useState10[1];\n\n  var _useState11 = useState(getDetails(\"position\")),\n      _useState12 = _slicedToArray(_useState11, 2),\n      position = _useState12[0],\n      setPosition = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      model = _useState14[0],\n      setModel = _useState14[1];\n\n  var submitData = function submitData() {\n    fetch(\"http://192.168.1.106:5000/send/\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        phone: phone,\n        salary: salary,\n        picture: picture,\n        position: position\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(data.name + \" is saved successfuly\");\n      console.log(\"save data\", data);\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n      console.log(err);\n    });\n  };\n\n  var updateData = function updateData() {\n    fetch(\"http://192.168.1.106:5000/update/\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: route.params._id,\n        name: name,\n        email: email,\n        phone: phone,\n        salary: salary,\n        position: position\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(data.name + \" is updated successfuly\");\n      console.log(\"save data\", data);\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n      console.log(err);\n    });\n  };\n\n  var pickImageFromGallery = function pickImageFromGallery() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function pickImageFromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test.\" + result.uri.split(\".\")[1]\n              };\n              handelUpload(newfile);\n              console.log(\"newfile\", newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageFromCamera = function pickImageFromCamera() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function pickImageFromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test.\" + result.uri.split(\".\")[1]\n              };\n              handelUpload(newfile);\n              console.log(\"newfile\", newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handelUpload = function handelUpload(image) {\n    var data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', \"employeeApp\");\n    data.append('cloud_name', \"gourab\");\n    var res = fetch(\"https://api.cloudinary.com/v1_1/gourab/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setPicture(data.url);\n      setModel(false);\n      console.log(\"url\", data);\n    }).catch(function (err) {\n      console.log(\"error handelupload\", err);\n    });\n  };\n\n  return _jsx(View, {\n    style: style.fullscreen,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: \"position\",\n      children: [_jsx(TextInput, {\n        style: style.textinput,\n        label: \"Name\",\n        value: name,\n        mode: \"outlined\",\n        onChangeText: function onChangeText(e) {\n          return setName(e);\n        },\n        selectionColor: \"#a89fd4\",\n        outlineColor: \"#1a298a\",\n        activeOutlineColor: \"#150c3d\"\n      }), _jsx(TextInput, {\n        style: style.textinput,\n        label: \"Email\",\n        value: email,\n        mode: \"outlined\",\n        onChangeText: function onChangeText(e) {\n          return setEmail(e);\n        },\n        selectionColor: \"#a89fd4\",\n        outlineColor: \"#1a298a\",\n        activeOutlineColor: \"#150c3d\"\n      }), _jsx(TextInput, {\n        style: style.textinput,\n        label: \"Phone\",\n        value: phone,\n        mode: \"outlined\",\n        keyboardType: \"number-pad\",\n        onChangeText: function onChangeText(e) {\n          return setPhone(e);\n        },\n        selectionColor: \"#a89fd4\",\n        outlineColor: \"#1a298a\",\n        activeOutlineColor: \"#150c3d\"\n      }), _jsx(TextInput, {\n        style: style.textinput,\n        label: \"Salary\",\n        value: salary,\n        mode: \"outlined\",\n        onChangeText: function onChangeText(e) {\n          return setSalary(e);\n        },\n        selectionColor: \"#a89fd4\",\n        outlineColor: \"#1a298a\",\n        activeOutlineColor: \"#150c3d\"\n      }), _jsx(TextInput, {\n        style: style.textinput,\n        label: \"Position\",\n        value: position,\n        mode: \"outlined\",\n        onChangeText: function onChangeText(e) {\n          return setPosition(e);\n        },\n        selectionColor: \"#a89fd4\",\n        outlineColor: \"#1a298a\",\n        activeOutlineColor: \"#150c3d\"\n      }), _jsx(Button, {\n        style: style.button,\n        icon: \"upload\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return setModel(true);\n        },\n        children: \"Upload Pic\"\n      }), route.params ? _jsx(Button, {\n        style: style.button,\n        icon: \"content-save\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return updateData();\n        },\n        children: \"Update\"\n      }) : _jsx(Button, {\n        style: style.button,\n        icon: \"content-save\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return submitData();\n        },\n        children: \"Save\"\n      }), _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: model,\n        onRequestClose: function onRequestClose() {\n          return setModel(false);\n        },\n        children: _jsxs(View, {\n          style: style.modelPossition,\n          children: [_jsxs(View, {\n            style: style.modelButtonView,\n            children: [_jsx(Button, {\n              style: style.button,\n              icon: \"camera\",\n              mode: \"contained\",\n              onPress: pickImageFromCamera,\n              children: \"Camera\"\n            }), _jsx(Button, {\n              style: style.button,\n              icon: \"folder\",\n              mode: \"contained\",\n              onPress: pickImageFromGallery,\n              children: \"Gallary\"\n            })]\n          }), _jsx(Button, {\n            style: style.button,\n            icon: \"cancel\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              return setModel(false);\n            },\n            children: \"Cancel\"\n          })]\n        })\n      })]\n    })\n  });\n};\n\nvar style = StyleSheet.create({\n  fullscreen: {\n    flex: 1\n  },\n  textinput: {\n    margin: 5,\n    backgroundColor: '#fff'\n  },\n  button: {\n    backgroundColor: \"#1a298a\",\n    margin: 5\n  },\n  modelPossition: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#d4d4d4\"\n  },\n  modelButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    margin: 5\n  }\n});\nexport default CreateEmployee;","map":{"version":3,"sources":["C:/Users/Gourab/OneDrive/Desktop/react native expo/employeeapp/screens/CreateEmployee.js"],"names":["react","useState","TextInput","Button","ImagePicker","CreateEmployee","navigation","route","console","log","getDetails","type","params","name","phone","email","salary","picture","position","setName","setEmail","setPhone","setSalary","setPicture","setPosition","model","setModel","submitData","fetch","method","headers","body","JSON","stringify","then","res","json","data","Alert","alert","navigate","catch","err","updateData","id","_id","pickImageFromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","newfile","uri","split","handelUpload","pickImageFromCamera","launchCameraAsync","image","FormData","append","url","style","fullscreen","textinput","e","button","modelPossition","modelButtonView","StyleSheet","create","flex","margin","backgroundColor","bottom","width","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import react, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, FlatList, Modal, Alert, KeyboardAvoidingView } from 'react-native';\r\nimport { TextInput, Button } from 'react-native-paper';\r\n\r\n//Image Picker\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as Permissions from 'expo-permissions'\r\n\r\n\r\n\r\nconst CreateEmployee = ({ navigation, route }) => {\r\n\r\n    console.log(\"Create Employee\",route)\r\n\r\n\r\n    const getDetails = (type) => {\r\n        if (route.params) {\r\n            switch (type) {\r\n                case \"name\":\r\n                    return route.params.name\r\n                case \"phone\":\r\n                    return route.params.phone\r\n                case \"email\":\r\n                    return route.params.email\r\n                case \"salary\":\r\n                    return route.params.salary\r\n                case \"picture\":\r\n                    return route.params.picture\r\n                case \"position\":\r\n                    return route.params.position\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n\r\n    const [name, setName] = useState(getDetails(\"name\"))\r\n    const [email, setEmail] = useState(getDetails(\"email\"))\r\n    const [phone, setPhone] = useState(getDetails(\"phone\"))\r\n    const [salary, setSalary] = useState(getDetails(\"salary\"))\r\n    const [picture, setPicture] = useState(getDetails(\"picture\"))\r\n    const [position, setPosition] = useState(getDetails(\"position\"))\r\n    const [model, setModel] = useState(false)\r\n    // const [image, setImage] = useState(null);\r\n\r\n\r\n\r\n    const submitData = () => {\r\n        fetch(\"http://192.168.1.106:5000/send/\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                phone,\r\n                salary,\r\n                picture,\r\n                position\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                Alert.alert(`${data.name} is saved successfuly`)\r\n                console.log(\"save data\", data)\r\n                navigation.navigate(\"Home\")\r\n            })\r\n            .catch(err => {\r\n                Alert.alert(\"someting went wrong\")\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const updateData=()=>{\r\n        fetch(\"http://192.168.1.106:5000/update/\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id:route.params._id,\r\n                name,\r\n                email,\r\n                phone,\r\n                salary,\r\n                position\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                Alert.alert(`${data.name} is updated successfuly`)\r\n                console.log(\"save data\", data)\r\n                navigation.navigate(\"Home\")\r\n            })\r\n            .catch(err => {\r\n                Alert.alert(\"someting went wrong\")\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const pickImageFromGallery = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        // console.log(result);\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test.${result.uri.split(\".\")[1]}`\r\n            }\r\n            handelUpload(newfile);\r\n            console.log(\"newfile\", newfile);\r\n        }\r\n    }\r\n\r\n\r\n    const pickImageFromCamera = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        // console.log(result);\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test.${result.uri.split(\".\")[1]}`\r\n            }\r\n            handelUpload(newfile);\r\n            console.log(\"newfile\", newfile);\r\n        }\r\n    }\r\n\r\n\r\n    // const handelUpload=(image)=>{\r\n    //   const result = new FromData();\r\n    //   data.append('file',image)\r\n    //   data.append('upload_preset',employeeApp)\r\n    //   data.append('cloud_name', \"gourab\")\r\n\r\n    // }\r\n\r\n\r\n    const handelUpload = (image) => {\r\n        const data = new FormData()\r\n        data.append('file', image)\r\n        data.append('upload_preset', \"employeeApp\")\r\n        data.append('cloud_name', \"gourab\")\r\n        const res = fetch(\"https://api.cloudinary.com/v1_1/gourab/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPicture(data.url)\r\n                setModel(false)\r\n                console.log(\"url\", data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error handelupload\", err)\r\n            })\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <View style={style.fullscreen}>\r\n            <KeyboardAvoidingView behavior='position'>\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setName(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setEmail(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Phone\"\r\n                    value={phone}\r\n                    mode=\"outlined\"\r\n                    keyboardType='number-pad'\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setPhone(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Salary\"\r\n                    value={salary}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setSalary(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Position\"\r\n                    value={position}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setPosition(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n\r\n                <Button style={style.button} icon=\"upload\" mode=\"contained\" onPress={() => setModel(true)}>\r\n                    Upload Pic\r\n                </Button>\r\n                {route.params ?\r\n                    <Button style={style.button} icon=\"content-save\" mode=\"contained\" onPress={() => updateData()}>\r\n                        Update\r\n                    </Button>\r\n                    :\r\n                    <Button style={style.button} icon=\"content-save\" mode=\"contained\" onPress={() => submitData()}>\r\n                        Save\r\n                    </Button>}\r\n                <Modal\r\n                    animationType='slide'\r\n                    transparent={true}\r\n                    visible={model}\r\n                    //Back button work\r\n                    onRequestClose={() => setModel(false)}\r\n                >\r\n                    <View style={style.modelPossition}>\r\n                        <View style={style.modelButtonView}>\r\n                            <Button style={style.button} icon=\"camera\" mode=\"contained\" onPress={pickImageFromCamera}>\r\n                                {/* {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />} */}\r\n                                Camera\r\n                            </Button>\r\n\r\n                            <Button style={style.button} icon=\"folder\" mode=\"contained\" onPress={pickImageFromGallery} >\r\n                                {/* {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />} */}\r\n                                Gallary\r\n                            </Button>\r\n                        </View>\r\n                        <Button style={style.button} icon=\"cancel\" mode=\"contained\" onPress={() => setModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </View>\r\n                </Modal>\r\n\r\n            </KeyboardAvoidingView>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    fullscreen: {\r\n        flex: 1,\r\n    },\r\n    textinput: {\r\n        margin: 5,\r\n        backgroundColor: '#fff',\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: \"#1a298a\",\r\n        margin: 5\r\n    },\r\n    modelPossition: {\r\n        position: \"absolute\",\r\n        bottom: 2,\r\n        width: \"100%\",\r\n        backgroundColor: \"#d4d4d4\"\r\n\r\n    },\r\n    modelButtonView: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        margin: 5,\r\n\r\n    }\r\n\r\n})\r\nexport default CreateEmployee"]},"metadata":{},"sourceType":"module"}