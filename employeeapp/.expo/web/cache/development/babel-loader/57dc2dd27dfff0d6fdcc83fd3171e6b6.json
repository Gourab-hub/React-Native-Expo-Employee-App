{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport react, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateEmployy = function CreateEmployy() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Salary = _useState8[0],\n      setSalary = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Picture = _useState10[0],\n      setPicture = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      model = _useState12[0],\n      setModel = _useState12[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: style.fullscreen,\n    children: [_jsx(TextInput, {\n      style: style.textinput,\n      label: \"Name\",\n      value: Name,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setName(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Email\",\n      value: Email,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setEmail(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Phone\",\n      value: Phone,\n      mode: \"outlined\",\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(e) {\n        return setPhone(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Salary\",\n      value: Salary,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setSalary(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(Button, {\n      style: style.button,\n      icon: \"upload\",\n      mode: \"contained\",\n      onPress: function onPress() {\n        return setModel(true);\n      },\n      children: \"Upload Pic\"\n    }), _jsx(Button, {\n      style: style.button,\n      icon: \"content-save\",\n      mode: \"contained\",\n      onPress: function onPress() {\n        return console.log(\"pressed\");\n      },\n      children: \"Save\"\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: model,\n      onRequestClose: function onRequestClose() {\n        return setModel(false);\n      },\n      children: _jsxs(View, {\n        style: style.modelPossition,\n        children: [_jsxs(View, {\n          style: style.modelButtonView,\n          children: [_jsxs(Button, {\n            style: style.button,\n            icon: \"camera\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              return console.log(\"pressed\");\n            },\n            children: [image && _jsx(Image, {\n              source: {\n                uri: image\n              },\n              style: {\n                width: 200,\n                height: 200\n              }\n            }), \"Camera\"]\n          }), _jsx(Button, {\n            style: style.button,\n            icon: \"folder\",\n            mode: \"contained\",\n            onPress: pickImage,\n            children: \"Gallary\"\n          })]\n        }), _jsx(Button, {\n          style: style.button,\n          icon: \"cancel\",\n          mode: \"contained\",\n          onPress: function onPress() {\n            return setModel(false);\n          },\n          children: \"Cancel\"\n        })]\n      })\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  fullscreen: {\n    flex: 1\n  },\n  textinput: {\n    margin: 5,\n    backgroundColor: '#fff'\n  },\n  button: {\n    backgroundColor: \"#1a298a\",\n    margin: 5\n  },\n  modelPossition: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#d4d4d4\"\n  },\n  modelButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    margin: 5\n  }\n});\nexport default CreateEmployy;","map":{"version":3,"sources":["C:/Users/Gourab/OneDrive/Desktop/react native expo/employeeapp/screens/CreateEmployee.js"],"names":["react","useState","TextInput","Button","ImagePicker","Permissions","CreateEmployy","Name","setName","Email","setEmail","Phone","setPhone","Salary","setSalary","Picture","setPicture","model","setModel","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","setImage","uri","style","fullscreen","textinput","e","button","modelPossition","modelButtonView","image","width","height","StyleSheet","create","flex","margin","backgroundColor","position","bottom","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import react, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, FlatList, Modal } from 'react-native';\r\nimport { TextInput, Button } from 'react-native-paper';\r\n\r\n//Image Picker\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions'\r\n\r\n\r\n\r\nconst CreateEmployy = () => {\r\n    const [Name, setName] = useState(\"\")\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Phone, setPhone] = useState(\"\")\r\n    const [Salary, setSalary] = useState(\"\")\r\n    const [Picture, setPicture] = useState(\"\")\r\n    const [model, setModel] = useState(false)\r\n\r\n    const pickImage = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n\r\n\r\n\r\n        console.log(result);\r\n\r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n        return (\r\n            <View style={style.fullscreen}>\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Name\"\r\n                    value={Name}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setName(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Email\"\r\n                    value={Email}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setEmail(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Phone\"\r\n                    value={Phone}\r\n                    mode=\"outlined\"\r\n                    keyboardType='number-pad'\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setPhone(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n                <TextInput\r\n                    style={style.textinput}\r\n                    label=\"Salary\"\r\n                    value={Salary}\r\n                    mode=\"outlined\"\r\n                    // placeholder='Enter Your Name'\r\n                    onChangeText={e => setSalary(e)}\r\n                    selectionColor='#a89fd4'\r\n                    outlineColor=\"#1a298a\"\r\n                    activeOutlineColor='#150c3d'\r\n                />\r\n\r\n                <Button style={style.button} icon=\"upload\" mode=\"contained\" onPress={() => setModel(true)}>\r\n                    Upload Pic\r\n                </Button>\r\n                <Button style={style.button} icon=\"content-save\" mode=\"contained\" onPress={() => console.log(\"pressed\")}>\r\n                    Save\r\n                </Button>\r\n\r\n                <Modal\r\n                    animationType='slide'\r\n                    transparent={true}\r\n                    visible={model}\r\n                    //Back button work\r\n                    onRequestClose={() => setModel(false)}\r\n                >\r\n                    <View style={style.modelPossition}>\r\n                        <View style={style.modelButtonView}>\r\n                            <Button style={style.button} icon=\"camera\" mode=\"contained\" onPress={() => console.log(\"pressed\")}>\r\n                            {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n                                Camera\r\n                            </Button>\r\n\r\n                            <Button style={style.button} icon=\"folder\" mode=\"contained\" onPress={pickImage} >\r\n                                Gallary\r\n                            </Button>\r\n                        </View>\r\n                        <Button style={style.button} icon=\"cancel\" mode=\"contained\" onPress={() => setModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </View>\r\n                </Modal>\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const style = StyleSheet.create({\r\n        fullscreen: {\r\n            flex: 1,\r\n        },\r\n        textinput: {\r\n            margin: 5,\r\n            backgroundColor: '#fff',\r\n\r\n        },\r\n        button: {\r\n            backgroundColor: \"#1a298a\",\r\n            margin: 5\r\n        },\r\n        modelPossition: {\r\n            position: \"absolute\",\r\n            bottom: 2,\r\n            width: \"100%\",\r\n            backgroundColor: \"#d4d4d4\"\r\n\r\n        },\r\n        modelButtonView: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            margin: 5,\r\n\r\n        }\r\n\r\n    })\r\n    export default CreateEmployy"]},"metadata":{},"sourceType":"module"}