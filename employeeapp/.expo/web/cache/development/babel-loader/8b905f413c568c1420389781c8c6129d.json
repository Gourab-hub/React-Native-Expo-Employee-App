{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport react, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateEmployy = function CreateEmployy() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Salary = _useState8[0],\n      setSalary = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Picture = _useState10[0],\n      setPicture = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Position = _useState12[0],\n      setPosition = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      model = _useState14[0],\n      setModel = _useState14[1];\n\n  var submitData = function submitData() {\n    fetch(\"http://localhost:5000/send/\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: Name,\n        Email: Email,\n        Phone: Phone,\n        Salary: Salary,\n        Picture: Picture,\n        positPion: positPion\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(data.name + \" is saved successfuly\");\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      Alert.alert(\"someting went wrong\");\n    });\n  };\n\n  var pickImageFromGallery = function pickImageFromGallery() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function pickImageFromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test.\" + result.uri.split(\".\")[1]\n              };\n              handelUpload(newfile);\n              console.log(\"newfile\", newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageFromCamera = function pickImageFromCamera() {\n    var result, newfile;\n    return _regeneratorRuntime.async(function pickImageFromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              newfile = {\n                uri: result.uri,\n                type: \"test/\" + result.uri.split(\".\")[1],\n                name: \"test.\" + result.uri.split(\".\")[1]\n              };\n              handelUpload(newfile);\n              console.log(\"newfile\", newfile);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handelUpload = function handelUpload(image) {\n    var data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', \"employeeApp\");\n    data.append('cloud_name', \"gourab\");\n    var res = fetch(\"https://api.cloudinary.com/v1_1/gourab/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setPicture(data.uri);\n      setModal(false);\n      console.log(\"uri\", data);\n    }).catch(function (err) {\n      console.log(\"error handelupload\", err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: style.fullscreen,\n    children: [_jsx(TextInput, {\n      style: style.textinput,\n      label: \"Name\",\n      value: Name,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setName(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Email\",\n      value: Email,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setEmail(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Phone\",\n      value: Phone,\n      mode: \"outlined\",\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(e) {\n        return setPhone(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Salary\",\n      value: Salary,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setSalary(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(TextInput, {\n      style: style.textinput,\n      label: \"Posi\",\n      value: Salary,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(e) {\n        return setSalary(e);\n      },\n      selectionColor: \"#a89fd4\",\n      outlineColor: \"#1a298a\",\n      activeOutlineColor: \"#150c3d\"\n    }), _jsx(Button, {\n      style: style.button,\n      icon: \"upload\",\n      mode: \"contained\",\n      onPress: function onPress() {\n        return setModel(true);\n      },\n      children: \"Upload Pic\"\n    }), _jsx(Button, {\n      style: style.button,\n      icon: \"content-save\",\n      mode: \"contained\",\n      onPress: function onPress() {\n        return console.log(\"pressed\");\n      },\n      children: \"Save\"\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: model,\n      onRequestClose: function onRequestClose() {\n        return setModel(false);\n      },\n      children: _jsxs(View, {\n        style: style.modelPossition,\n        children: [_jsxs(View, {\n          style: style.modelButtonView,\n          children: [_jsx(Button, {\n            style: style.button,\n            icon: \"camera\",\n            mode: \"contained\",\n            onPress: pickImageFromCamera,\n            children: \"Camera\"\n          }), _jsx(Button, {\n            style: style.button,\n            icon: \"folder\",\n            mode: \"contained\",\n            onPress: pickImageFromGallery,\n            children: \"Gallary\"\n          })]\n        }), _jsx(Button, {\n          style: style.button,\n          icon: \"cancel\",\n          mode: \"contained\",\n          onPress: function onPress() {\n            return setModel(false);\n          },\n          children: \"Cancel\"\n        })]\n      })\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  fullscreen: {\n    flex: 1\n  },\n  textinput: {\n    margin: 5,\n    backgroundColor: '#fff'\n  },\n  button: {\n    backgroundColor: \"#1a298a\",\n    margin: 5\n  },\n  modelPossition: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"#d4d4d4\"\n  },\n  modelButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    margin: 5\n  }\n});\nexport default CreateEmployy;","map":{"version":3,"sources":["C:/Users/Gourab/OneDrive/Desktop/react native expo/employeeapp/screens/CreateEmployee.js"],"names":["react","useState","TextInput","Button","ImagePicker","CreateEmployy","Name","setName","Email","setEmail","Phone","setPhone","Salary","setSalary","Picture","setPicture","Position","setPosition","model","setModel","submitData","fetch","method","headers","body","JSON","stringify","positPion","then","res","json","data","Alert","alert","name","navigation","navigate","catch","err","pickImageFromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","newfile","uri","type","split","handelUpload","console","log","pickImageFromCamera","launchCameraAsync","image","FormData","append","setModal","style","fullscreen","textinput","e","button","modelPossition","modelButtonView","StyleSheet","create","flex","margin","backgroundColor","position","bottom","width","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import react, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, FlatList, Modal } from 'react-native';\r\nimport { TextInput, Button } from 'react-native-paper';\r\n\r\n//Image Picker\r\nimport * as ImagePicker from 'expo-image-picker';\r\n// import * as Permissions from 'expo-permissions'\r\n\r\n\r\n\r\nconst CreateEmployy = () => {\r\n    const [Name, setName] = useState(\"\")\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Phone, setPhone] = useState(\"\")\r\n    const [Salary, setSalary] = useState(\"\")\r\n    const [Picture, setPicture] = useState(\"\")\r\n    const [Position, setPosition] = useState(\"\")\r\n    const [model, setModel] = useState(false)\r\n    // const [image, setImage] = useState(null);\r\n\r\n\r\n\r\n    const submitData = ()=>{\r\n        fetch(\"http://localhost:5000/send/\",{\r\n            method:\"post\",\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n              \r\n                Name,\r\n                Email,\r\n                Phone,\r\n                Salary,\r\n                Picture,\r\n                positPion\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            Alert.alert(`${data.name} is saved successfuly`)\r\n            navigation.navigate(\"Home\")\r\n        })\r\n        .catch(err=>{\r\n          Alert.alert(\"someting went wrong\")\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n    const pickImageFromGallery = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        // console.log(result);\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test.${result.uri.split(\".\")[1]}`\r\n            }\r\n            handelUpload(newfile);\r\n            console.log(\"newfile\", newfile);\r\n        }\r\n    }\r\n\r\n\r\n    const pickImageFromCamera = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        // console.log(result);\r\n        if (!result.cancelled) {\r\n            let newfile = {\r\n                uri: result.uri,\r\n                type: `test/${result.uri.split(\".\")[1]}`,\r\n                name: `test.${result.uri.split(\".\")[1]}`\r\n            }\r\n            handelUpload(newfile);\r\n            console.log(\"newfile\", newfile);\r\n        }\r\n    }\r\n\r\n\r\n    // const handelUpload=(image)=>{\r\n    //   const result = new FromData();\r\n    //   data.append('file',image)\r\n    //   data.append('upload_preset',employeeApp)\r\n    //   data.append('cloud_name', \"gourab\")\r\n\r\n    // }\r\n\r\n\r\n    const handelUpload = (image) => {\r\n        const data = new FormData()\r\n        data.append('file', image)\r\n        data.append('upload_preset', \"employeeApp\")\r\n        data.append('cloud_name', \"gourab\")\r\n        const res = fetch(\"https://api.cloudinary.com/v1_1/gourab/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPicture(data.uri)\r\n                setModal(false)\r\n                console.log(\"uri\", data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error handelupload\", err)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={style.fullscreen}>\r\n            <TextInput\r\n                style={style.textinput}\r\n                label=\"Name\"\r\n                value={Name}\r\n                mode=\"outlined\"\r\n                // placeholder='Enter Your Name'\r\n                onChangeText={e => setName(e)}\r\n                selectionColor='#a89fd4'\r\n                outlineColor=\"#1a298a\"\r\n                activeOutlineColor='#150c3d'\r\n            />\r\n            <TextInput\r\n                style={style.textinput}\r\n                label=\"Email\"\r\n                value={Email}\r\n                mode=\"outlined\"\r\n                // placeholder='Enter Your Name'\r\n                onChangeText={e => setEmail(e)}\r\n                selectionColor='#a89fd4'\r\n                outlineColor=\"#1a298a\"\r\n                activeOutlineColor='#150c3d'\r\n            />\r\n            <TextInput\r\n                style={style.textinput}\r\n                label=\"Phone\"\r\n                value={Phone}\r\n                mode=\"outlined\"\r\n                keyboardType='number-pad'\r\n                // placeholder='Enter Your Name'\r\n                onChangeText={e => setPhone(e)}\r\n                selectionColor='#a89fd4'\r\n                outlineColor=\"#1a298a\"\r\n                activeOutlineColor='#150c3d'\r\n            />\r\n            <TextInput\r\n                style={style.textinput}\r\n                label=\"Salary\"\r\n                value={Salary}\r\n                mode=\"outlined\"\r\n                // placeholder='Enter Your Name'\r\n                onChangeText={e => setSalary(e)}\r\n                selectionColor='#a89fd4'\r\n                outlineColor=\"#1a298a\"\r\n                activeOutlineColor='#150c3d'\r\n            />\r\n             <TextInput\r\n                style={style.textinput}\r\n                label=\"Posi\"\r\n                value={Salary}\r\n                mode=\"outlined\"\r\n                // placeholder='Enter Your Name'\r\n                onChangeText={e => setSalary(e)}\r\n                selectionColor='#a89fd4'\r\n                outlineColor=\"#1a298a\"\r\n                activeOutlineColor='#150c3d'\r\n            />\r\n\r\n            <Button style={style.button} icon=\"upload\" mode=\"contained\" onPress={() => setModel(true)}>\r\n                Upload Pic\r\n            </Button>\r\n            <Button style={style.button} icon=\"content-save\" mode=\"contained\" onPress={() => console.log(\"pressed\")}>\r\n                Save\r\n            </Button>\r\n\r\n            <Modal\r\n                animationType='slide'\r\n                transparent={true}\r\n                visible={model}\r\n                //Back button work\r\n                onRequestClose={() => setModel(false)}\r\n            >\r\n                <View style={style.modelPossition}>\r\n                    <View style={style.modelButtonView}>\r\n                        <Button style={style.button} icon=\"camera\" mode=\"contained\" onPress={pickImageFromCamera}>\r\n                            {/* {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />} */}\r\n                            Camera\r\n                        </Button>\r\n\r\n                        <Button style={style.button} icon=\"folder\" mode=\"contained\" onPress={pickImageFromGallery} >\r\n                            {/* {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />} */}\r\n                            Gallary\r\n                        </Button>\r\n                    </View>\r\n                    <Button style={style.button} icon=\"cancel\" mode=\"contained\" onPress={() => setModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                </View>\r\n            </Modal>\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    fullscreen: {\r\n        flex: 1,\r\n    },\r\n    textinput: {\r\n        margin: 5,\r\n        backgroundColor: '#fff',\r\n\r\n    },\r\n    button: {\r\n        backgroundColor: \"#1a298a\",\r\n        margin: 5\r\n    },\r\n    modelPossition: {\r\n        position: \"absolute\",\r\n        bottom: 2,\r\n        width: \"100%\",\r\n        backgroundColor: \"#d4d4d4\"\r\n\r\n    },\r\n    modelButtonView: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        margin: 5,\r\n\r\n    }\r\n\r\n})\r\nexport default CreateEmployy"]},"metadata":{},"sourceType":"module"}